version: '3.8'

services:
  db:
    image: postgres:14-alpine3.17
    container_name: db_app
    env_file:
      - .env
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    network_mode: host
    image: app
    container_name: drf
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000


  node:
    build: ./frontend_react
    # имя контейнера
    container_name: reactapp
    # порты
    ports:
      - 3000:3000
    # команда при запуске
    command: npm start
    # зависимость
    depends_on:
      - app
# создаём два volume для статики
volumes:
  django_static_volume:
  django_media_volume: